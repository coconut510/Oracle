SELECT EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY < ANY( 2000000, 5000000); 

-- EX) J3 코드를 가진 사람의 급여들을 가지고 비교

SELECT SALARY FROM EMPLOYEE
WHERE JOB_CODE LIKE 'J3';


-- J3 코드를 가진 사람들의 급여중에서 가장 작은 사람보다 큰 급여들을 출력

SELECT EMP_NAME,SALARY FROM EMPLOYEE
WHERE SALARY > ANY(SELECT SALARY FROM EMPLOYEE
WHERE JOB_CODE LIKE 'J3');

-- 'D1' 또는 'D5' 부서코드를 가지고 있는 사원들의 
-- 급여 중에서 가장 높은 급여보다 작은

SELECT EMP_NAME AS 이름, SALARY 급여,DEPT_CODE 부서코드 FROM EMPLOYEE
WHERE SALARY < ANY( SELECT SALARY FROM EMPLOYEE WHERE DEPT_CODE IN ('D1','D5'));

-- 실습문제 1
-- ('D1'또는'D5' 부서코드를 가지고 있는 사원 들의
-- 급여 중에서 가장 높은 급여) 보다 작은 모든 사원들의 이름, 급여, 부서코드를 출력하여라
SELECT EMP_NAME AS 이름, SALARY AS 급여, DEPT_CODE AS 부서코드 
FROM EMPLOYEE
WHERE SALARY < ANY(SELECT SALARY FROM EMPLOYEE WHERE  DEPT_CODE IN ('D1','D5'));

-- < ANY(OR..OR..OR)
-- 서브쿼리에서 나온 결과들 중에서
-- 하나라도 작다면.

-- 실습문제 2
-- 부서별 평균 급여를 조사하였을때 가장 낮은 부서의 급여보다
-- 높거나 같은 모든 사원들의 이름 , 급여 , 부서명을 출력하시오

SELECT EMP_NAME AS 이름, SALARY AS 급여, NVL(DEPT_TITLE,'부서없음') AS 부서명
FROM EMPLOYEE LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE SALARY >=
ANY(SELECT MIN(AVG(SALARY)) FROM EMPLOYEE GROUP BY DEPT_CODE);


SELECT EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY < ALL(2000000, 5000000);

-- 실습1
-- D2 부서의 모든 사원들의 급여보다 적은 급여를 받는 사원을 조회.

SELECT EMP_NAME AS 이름, SALARY 급여 FROM EMPLOYEE
WHERE SALARY < ALL(SELECT SALARY FROM EMPLOYEE WHERE DEPT_CODE LIKE 'D2');

-- 보너스 포인트 3.0 이상인 사원들이 있다면
-- 모든 사원의 정보를 출력해 주어라.

SELECT EMP_NAME , BONUS 
FROM EMPLOYEE
WHERE EXISTS(
SELECT * FROM EMPLOYEE
WHERE NVL(BONUS,0) >=0.1);

-- 보너스율이 1 이상인 사원이 없다면
-- 모든 사원의 이름, 급여를 출력하되 10% 인상된 급쳐로 출력하여라.
-- 보너스율이 1이상이 사원이 있다면
-- 출력하지 말아라

SELECT EMP_NAME, SALARY * 1.1 FROM EMPLOYEE
WHERE NOT EXISTS(SELECT NULL FROM EMPLOYEE WHERE BONUS>=1);


-- 회사에서 퇴사한 여직원과 같은 부서 및 직급인 
-- 사원을 검색하시오 !(이름, 직급, 부서, 입사일을 출력)

SELECT EMP_NAME, JOB_CODE, DEPT_CODE, HIRE_DATE
FROM EMPLOYEE
WHERE (DEPT_CODE,JOB_CODE) IN (SELECT DEPT_CODE,JOB_CODE 
FROM EMPLOYEE 
                        WHERE ENT_DATE IS NOT NULL AND EMP_NO LIKE '______-2%');
                        
                        
-- @ 실습문제

-- 기술지원부이면서 급여가 2,000,000 원
-- 직원의 이름, 부서코드 , 급여, 부서의지역명 을 출력하시오
SELECT * FROM DEPARTMENT;
SELECT * FROM LOCATION;

SELECT EMP_NAME AS 이름, DEPT_CODE 부서코드, SALARY 급여, LOCAL_NAME AS 지역이름
FROM EMPLOYEE JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
              JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE (SALARY, DEPT_CODE) IN (SELECT SALARY, DEPT_CODE FROM EMPLOYEE 
                              WHERE SALARY LIKE 2000000 AND DEPT_CODE = 'D8');

--  ORACLE 표기법.
SELECT  EMP_NAME , DEPT_CODE, SALARY, LOCAL_NAME
FROM EMPLOYEE, LOCATION
WHERE (DEPT_CODE, LOCAL_CODE) IN 
(SELECT DEPT_ID, LOCATION_ID FROM DEPARTMENT
WHERE DEPT_TITLE = '기술지원부')
AND SALARY LIKE 2000000;

-- ANSI 표기법.

SELECT EMP_NAME, DEPT_CODE, SALARY, LOCAL_NAME
FROM EMPLOYEE
JOIN LOCATION ON (DEPT_CODE, LOCAL_CODE)
IN (SELECT DEPT_ID, LOCATION_ID FROM DEPARTMENT
    WHERE DEPT_TITLE ='기술지원부') -- AND SALARY = 2000000;
WHERE SALARY =2000000; 


-- 직급별 최소 급여를 받는 직원의 이름, 사번, 부서코드, 입사일, 연봉을 출력

SELECT EMP_NAME , EMP_ID, DEPT_CODE, HIRE_DATE, SALARY * 12
FROM EMPLOYEE
WHERE(JOB_CODE, SALARY)
IN (SELECT JOB_CODE, MIN(SALARY)
FROM EMPLOYEE
GROUP BY JOB_CODE);

-- 상관 쿼리 예시
-- 관리자가 있는 사원들 중 관리자의 사번이 EMPLOYEE 테이블에 존재하는 
-- 직원의 사번과 같을 때 직원의 사번,이름, 소속부서, 관리자 사번을 조회하시오.

SELECT EMP_ID, EMP_NAME, DEPT_CODE, MANAGER_ID
FROM EMPLOYEE E
WHERE EXISTS(SELECT NULL
            FROM EMPLOYEE E2
            WHERE E.MANAGER_ID = E2.EMP_ID);


SELECT E.EMP_ID , E.EMP_NAME, E.MANAGER_ID,
	NVL((SELECT E2.EMP_NAME
		FROM EMPLOYEE E2
		WHERE E.MANAGER_ID = E2.EMP_ID), '없음') AS "관리자명"
FROM EMPLOYEE E
ORDER BY 1;

--@실습문제
--1. 사원명, 부서코드, 부서별 평균임금을 스칼라서브쿼리를 이용해서 출력.
SELECT E.EMP_NAME AS 사원명, NVL(E.DEPT_CODE,'부서없음') AS 부서코드 , 
                ( SELECT FLOOR(AVG(E2.SALARY)) 
                  FROM EMPLOYEE E2 
                  GROUP BY E2.DEPT_CODE
                  HAVING NVL(E.DEPT_CODE,'부서없음') = NVL(E2.DEPT_CODE,'부서없음')) AS 부서별평균임금
                FROM EMPLOYEE E
                ORDER BY 부서코드;

SELECT E.EMP_NAME, E.DEPT_CODE
FROM EMPLOYEE E JOIN EMPLOYEE E2 ON (E.EMP_NAME = E2.EMP_NAME)
WHERE AVG(E2.SALARY)<E.SALARY;


SELECT EMP_NAME, JOB_CODE, SALARY
FROM EMPLOYEE E1
WHERE SALARY >= (SELECT AVG(SALARY)
		FROM EMPLOYEE E2
		WHERE E2.JOB_CODE = E1.JOB_CODE)
ORDER BY 2;

SELECT *
FROM(
SELECT *
FROM(
SELECT EMP_NAME, SALARY, DEPT_CODE
FROM EMPLOYEE
WHERE SALARY >= 3000000)
WHERE DEPT_CODE IN('D9','D5')
);

SELECT ROWNUM, 뷰.*
FROM(
SELECT EMP_NAME, SALARY
FROM EMPLOYEE
ORDER BY SALARY DESC) 뷰
WHERE ROWNUM <=5;

SELECT ROWNUM,EMPLOYEE.* FROM EMPLOYEE;


WITH TOP_N_SAL AS (SELECT EMP_NAME, SALARY FROM EMPLOYEE ORDER BY SALARY DESC)

SELECT ROWNUM, TOP_N_SAL.*
FROM TOP_N_SAL
WHERE ROWNUM <=5;

WITH TOP_N AS (SELECT RANK() OVER(ORDER BY SALARY DESC) AS 순위, EMP_NAME, SALARY
                FROM EMPLOYEE)
SELECT *
FROM TOP_N;


SELECT RANK() OVER(ORDER BY SALARY DESC) AS 순위, EMP_NAME, SALARY
                FROM EMPLOYEE;

SELECT DENSE_RANK() OVER(ORDER BY SALARY DESC) AS 순위, EMP_NAME, SALARY
                FROM EMPLOYEE;
                                
SELECT ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS 순위, EMP_NAME, SALARY
                FROM EMPLOYEE;



--@ 실습 문제
--문제1
--기술지원부에 속한 사람들의 사람의 이름,부서코드,급여를 출력하시오
SELECT EMP_NAME AS 이름 , DEPT_CODE AS 부서코드, SALARY AS 급여
FROM EMPLOYEE
WHERE DEPT_CODE = (SELECT DEPT_ID FROM DEPARTMENT WHERE DEPT_TITLE LIKE '기술지원부'); 

--문제2
--기술지원부에 속한 사람들 중 가장 연봉이 높은 사람의 이름,부서코드,급여를 출력하시오
SELECT EMP_NAME AS 이름 , DEPT_CODE AS 부서코드, SALARY AS 급여
FROM EMPLOYEE
WHERE  SALARY =  (SELECT MAX(SALARY) 
        FROM EMPLOYEE,DEPARTMENT 
        WHERE DEPT_TITLE = '기술지원부'
            AND DEPT_CODE = DEPT_ID);
        
--문제3
--매니저가 있는 사원중에 월급이 전체사원 평균을 넘고 
--사번,이름,매니저 이름,월급(만원단위부터)을 구하시오
-- * 단, JOIN을 이용하시오

SELECT E1.EMP_ID AS 사번, E1.EMP_NAME AS 이름, NVL(E2.EMP_NAME,'없음') 매니저, E1.SALARY*0.0001||'만원' AS 월급
FROM EMPLOYEE E1 
LEFT JOIN EMPLOYEE E2 ON (E1.MANAGER_ID = E2.EMP_ID)
WHERE E1.SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE) AND E1.MANAGER_ID IS NOT NULL;

--문제4
--각 직급마다 급여 등급이 가장 높은 직원의 이름, 직급코드, 급여, 급여등급 조회
SELECT E.EMP_NAME AS 이름 , E.JOB_CODE AS 직급코드, E.SALARY AS 급여, E.SAL_LEVEL AS 급여등급
FROM EMPLOYEE E JOIN SAL_GRADE SG ON (E.SAL_LEVEL = SG.SAL_LEVEL)
WHERE (SUBSTR(E.SAL_LEVEL,2,1)) = (SELECT MIN(SUBSTR(E2.SAL_LEVEL,2,1)) FROM EMPLOYEE E2
                                WHERE E2.JOB_CODE = E.JOB_CODE GROUP BY E2.JOB_CODE);
--문제5
-- 부서별 평균 급여가 2200000 이상인 부서명, 평균 급여 조회
-- 단, 평균 급여는 소수점 버림

SELECT (SELECT DEPT_TITLE FROM DEPARTMENT WHERE DEPT_CODE  = DEPT_ID) AS 부서명, FLOOR(AVG(SALARY)) AS 평균급여
FROM EMPLOYEE
GROUP BY DEPT_CODE
HAVING AVG(SALARY) >= 2000000;

--문제6
--직급의 연봉 평균보다 적게 받는 여자사원의
--사원명,직급코드,부서코드,연봉을 이름 오름차순으로 조회하시오
--연봉 계산 => (급여+(급여*보너스))*1

SELECT EMP_NAME AS 사원명, JOB_CODE AS 직급코드 , NVL(DEPT_CODE,'부서없음') AS 부서코드, (1+NVL(BONUS,0)) * SALARY * 12 AS 연봉
FROM EMPLOYEE E
WHERE SUBSTR(E.EMP_NO, 8,1) LIKE 2 AND 
      (1+NVL(BONUS,0)) * SALARY  < (SELECT AVG(SALARY) FROM EMPLOYEE E2
                WHERE E.JOB_CODE = E2.JOB_CODE
                GROUP BY JOB_CODE)
ORDER BY 사원명;



